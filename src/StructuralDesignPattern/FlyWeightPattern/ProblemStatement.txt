Problem Statement 1:
In game development, especially in scenarios like shooting games where numerous "identical" bullets are fired, memory and
performance can quickly become an issueif each bullet object stores redundant data.
Use Flyweight Pattern to reduce memory overhead by sharing intrinsic (common) properties of bullets (like appearance)
while maintaining unique extrinsic properties (like position and velocity)


Problem Statement 2:
Imagine a graphical user interface (GUI) application where multiple icons of different types
(e.g., file icons, folder icons) need to be displayed on a screen. Each icon type has a specific appearance
and behavior, such as different images and positions on the screen. However, displaying numerous icons of the
same type can consume significant memory if each icon object stores its unique properties independently.

